<project name="safeHibernate" basedir="." default="emma">

	<!--  Diretórios do projeto  -->
	<property name="src.dir" value="../certificate/src" />
	<property name="bin.dir" value="bin" />
	<property name="teste.dir" value="src" />
	<property name="lib.dir" value="lib" />

	<!-- Diretórios do Emma -->
	<property name="emma.bin.dir" value="emma/bin" />
	<property name="emma.metadado.dir" value="emma/metadados" />
	<property name="emma.relatorio.dir" value="emma/relatorio" />

	<!-- Suite de Teste -->
	<property name="suite.testes" value="jm.MatematicaTeste" />


	<!-- Flag indicando se o Emma deve ser executado -->
	<property name="emma.deveExecutar" value="true" />

	<!-- Classpath do projeto -->
	<path id="project.classpath">
		<pathelement location="${bin.dir}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Define tasks do Emma -->
	<taskdef resource="emma_ant.properties">
		<classpath refid="project.classpath" />
	</taskdef>

	<!-- Define tasks do JUnit -->
	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
		<classpath refid="project.classpath" />
	</taskdef>

	<!-- Inicializa o diretório bin, 
    que armazena as classes compiladas -->
	<target name="init">
		<delete dir="${bin.dir}" />
		<mkdir dir="${bin.dir}" />
	</target>

	<!-- Compila a aplicação -->
	<target name="compilaSrc" depends="init">
		<javac debug="on" srcdir="${src.dir}" destdir="${bin.dir}">
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<!-- Emma instrumenta as classes compiladas da aplicação -->
	<target name="instrumenta" depends="compilaSrc">
		<emma enabled="${emma.deveExecutar}">
			<instr instrpath="${bin.dir}" destdir="${emma.bin.dir}" metadatafile="${emma.metadado.dir}/metadado.emma" merge="false" mode="fullcopy">
			</instr>
		</emma>
	</target>

	<!-- Compila os testes -->
	<target name="compilaTeste">
		<javac debug="on" srcdir="${teste.dir}" destdir="${bin.dir}">
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<!-- Executa os testes contra as classes da 
    aplicação instrumentadas pelo Emma -->
	<target name="testa" depends="instrumenta, compilaTeste">
		<junit haltonfailure="false" haltonerror="false" fork="true">
			<classpath>
				<pathelement location="${emma.bin.dir}/classes" />
				<pathelement location="${emma.bin.dir}/lib" />
				<path refid="project.classpath" />
			</classpath>
			<formatter type="plain" usefile="false" />
			<test name="${suite.testes}" />

			<jvmarg value="-Demma.coverage.out.file=${emma.metadado.dir}/cobertura.emma" />
			<jvmarg value="-Demma.coverage.out.merge=false" />
		</junit>
	</target>

	<!-- Gera relatório do Emma -->
	<target name="emma" depends="testa">
		<delete dir="${emma.relatorio.dir}" />
		<emma enabled="${emma.deveExecutar}">
			<report sourcepath="${src.dir}" sort="+block,+name,+method,+class" metrics="method:70,block:80,line:80,class:100">
				<fileset dir="${emma.metadado.dir}">
					<include name="*.emma" />
				</fileset>
				<html outfile="${emma.relatorio.dir}/index.html" depth="method" columns="name,class,method,block,line" />
			</report>
		</emma>
		<antcall target="clean" />
	</target>

	<!-- Apaga diretórios de trabalho do Emma -->
	<target name="clean">
		<delete dir="${emma.bin.dir}" />
		<delete dir="${emma.metadado.dir}" />
	</target>
</project>